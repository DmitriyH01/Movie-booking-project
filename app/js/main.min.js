const currentDate=new Date,calendar=document.querySelector(".calendar"),btnWrap=document.querySelector(".calendar_wrap"),daysOfWeek={0:"Sunday",1:"Monday",2:"Tuesday",3:"Wednesday",4:"Thursday",5:"Friday",6:"Saturday"};function getDay(e){return daysOfWeek[e.getDay()]}function getDate(e){return e.getDate()}function createDate(e,t){const n=new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getDay()),s=n.getDate()+t;return n.setDate(s),n}function getCountDaysInMonth(e){const t=new Date(e.getFullYear(),e.getMonth(),1),n=new Date(e.getFullYear(),e.getMonth()+1,1);return Math.round((n-t)/1e3/3600/24)}function createMonth(e){const t=document.createDocumentFragment();for(let n=0;n<getCountDaysInMonth(e);n++){const s=getDay(createDate(e,n)),a=getDate(createDate(e,n)),c=document.createElement("label");c.classList.add("calendar_item"),c.innerHTML=`<input type ="radio" name = "date" id = ${a} class="calendar_item_input">\n         <span>${s}\n           <br>${a}\n         </span>`,t.append(c)}return t}function appendElements(e,t){e.append(t)}appendElements(calendar,createMonth(currentDate)),btnWrap.addEventListener("click",(function({target:e}){const{nodeName:t,id:n}=e;"BUTTON"===t&&scrollDirection[n](calendar)}));const scrollDirection={right:e=>e.scrollLeft+=80,left:e=>e.scrollLeft-=80},sessionsTime=["14:00","17:30","21:00","23:20"],filmName="Monster Hunter",priceOfTicket=8,reservedSeats=[1,10,12,13,45],seatsCount=50,choiceSeatsWrapper=document.getElementById("tickets_wrapper"),seatsInCinema=document.querySelector("#cinemaHall"),sessionsWrap=document.querySelector("#sessionsWrap"),bodyElement=document.querySelector("body");let ticketListWrapper=null,chosenTicketsList=null,buyButton=null;function isElementSelected(e){return Array.prototype.some.call(e.children,e=>e.firstChild.checked)}function init(){addDomElement(choiceSeatsWrapper,createWrapperForChosenTickets())}function createWrapperForChosenTickets(){return'  <div id="seatsChoice" class="seats_choice">\n      <ul id="selectionsBuying" class="seats_choice_list"></ul>\n      <input\n        id="buyTickets"\n        class="seats_choice_list_input"\n        type="radio"\n        value=""\n      />\n      <label for="buyTickets" class="seats_choice_list_label"\n        >BUY SELECTED</label\n      >\n    </div>'}function addDomElement(e,t){e.insertAdjacentHTML("beforeEnd",t)}function getSelectedSessionItem(e){let t=null;return Array.prototype.forEach.call(e.children,e=>{e.firstChild.checked&&(t=e.firstChild.id)}),t}sessionsWrap.addEventListener("change",(function({target:e}){const t=isElementSelected;null===ticketListWrapper&&(t(calendar)||noSelect.calendar(e),t(calendar)&&t(sessionsWrap)&&(init(),ticketListWrapper=document.querySelector("#seatsChoice"),chosenTicketsList=document.querySelector("#selectionsBuying"),buyButton=document.querySelector(".seats_choice_list_label")))}));const sessionInfo={date:()=>getSelectedSessionItem(calendar),time:()=>getSelectedSessionItem(sessionsWrap)};function createTicket(e){return` <li data-ticket = ${e} class="seats_choice_list_ticket">\n              <h4>${filmName}</h4>\n              <span>${e}</span><br>\n              <span>date ${sessionInfo.date()} time ${sessionInfo.time()} </span>\n            </li>`}function addTicket(e,t){e.insertAdjacentHTML("beforeEnd",createTicket(t))}function getChosenSeat(e,t){const n=e.children;let s=null;return Array.prototype.some.call(n,(function(e){e.dataset.ticket===t.value&&(s=e)})),s}function deleteTicket(e,t){e.removeChild(t)}const ticketMovement={true:(e,t)=>addTicket(e,t.value),false:(e,t)=>deleteTicket(e,getChosenSeat(e,t))};function showElement(e){e.style.display="block"}function hideElement(e){e.style.display="none"}const noSelect={calendar:e=>{alert("Please select date"),e.checked=!1},sessionsWrap:e=>{alert("Please select time"),e.checked=!1}};function initLastConformingMassage(){ticketListWrapper.addEventListener("change",(function(){hideElement(ticketListWrapper),addLastConformingBuyMessage(seatsInCinema)}))}function freesUpSpaceForLastConformingBuyMassage(e){e.innerHTML=null,e.style.display="block"}function createLastConformingBuyMessage(e,t){return`    <div id="basket" class="basket">\n      <span>\n        You buy ${e} ticket for ${t} $\n      </span>\n      <h4>Do you wont to continue?</h4>\n      <input id="yes" name="buyButton" type="radio" value="" />\n      <label for="yes" class="basket_btn">Yes</label>\n      <input id="no" name="buyButton" type="radio" value="" />\n      <label for="no" class="basket_btn">No</label>\n    </div>`}function addLastConformingBuyMessage(e){const t=getNumberOfSelectedTickets(chosenTicketsList),n=createLastConformingBuyMessage(t,getCostOfTickets(t,8));freesUpSpaceForLastConformingBuyMassage(e),e.insertAdjacentHTML("beforeEnd",n)}function getNumberOfSelectedTickets(e){return e.children.length}function getCostOfTickets(e,t){return e*t}function viewMassage(e,t){e.insertAdjacentHTML("afterBegin",t)}function createConfirmingMassage(){return'<div class="message_wrapper">\n  <span>Thank for buying,wait confirming message</span>\n   <a href ="#" onClick="window.location.reload()">Go to ticket selection</a>\n</div>'}function createAbortMessage(){return'<div class="message_wrapper">\n  <span>Thank for visiting our site, please come back next time </span>\n   <a href ="#" onClick="window.location.reload()">Go to ticket selection</a>\n</div>'}seatsInCinema.addEventListener("change",(function({target:e}){const{name:t,id:n,checked:s}=e,a=isElementSelected,c=ticketMovement[s],i=a(calendar)&&a(sessionsWrap);if(a(calendar)?a(sessionsWrap)||noSelect.sessionsWrap(e):noSelect.calendar(e),i){c(chosenTicketsList,e);const s=getNumberOfSelectedTickets(chosenTicketsList);s?showElement(buyButton):s||hideElement(buyButton),"buyButton"===t&&answerAfterSelection[n](bodyElement),initLastConformingMassage()}}));const answerAfterSelection={yes:e=>viewMassage(e,createConfirmingMassage()),no:e=>viewMassage(e,createAbortMessage())},conditionOfPlaces={};function compareConditionOfPlaces(){fillConditionOfPlaces(50,conditionOfPlaces),getReservedSeats(conditionOfPlaces,reservedSeats)}function fillConditionOfPlaces(e,t){for(let n=1;n<e+1;n++)t[n]=n;return t}function getReservedSeats(e,t){Object.keys(e).forEach(n=>{t.forEach(t=>{n===t.toString()&&(e[n]="disabled")})})}function getRow(e){let t=null;return e<=10?t=1:e<=20?t=2:e<=30?t=3:e<=40?t=4:e<=50&&(t=5),t}function createSeats(e,t){const n=document.createDocumentFragment();for(let s=1;s<e+1;s++){let e="";"disabled"===t[s]&&(e=t[s]);const a=document.createElement("label");a.classList.add("hall_seat"),a.innerHTML=`<input class="hall_seat_input" type="checkbox" \n            ${e} value="Seat-${s}_Row-${getRow(s)}">\n            <span class="hall_seat_number">${s}</span>`,n.append(a)}return n}function createSessionsTime(e){const t=document.createDocumentFragment();return e.forEach(e=>{const n=document.createElement("label");n.classList="time_wrap_lists_item",n.innerHTML=`<input type="radio" name="time" id="${[e]}"/>\n        <span>${[e]} </span>`,t.appendChild(n)}),t}compareConditionOfPlaces(),appendElements(seatsInCinema,createSeats(50,conditionOfPlaces)),appendElements(sessionsWrap,createSessionsTime(sessionsTime));